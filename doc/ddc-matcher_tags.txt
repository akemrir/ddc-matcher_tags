*ddc-matcher_tags.txt*	Heading matcher for ddc.vim

Author: Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS					*ddc-matcher_tags-contents*

Introduction		|ddc-matcher_tags-introduction|
Install			|ddc-matcher_tags-install|
Examples		|ddc-matcher_tags-examples|
Params			|ddc-matcher_tags-params|


==============================================================================
INTRODUCTION				*ddc-matcher_tags-introduction*

This filter filters items by word head.


==============================================================================
INSTALL						*ddc-matcher_tags-install*

Please install all "ddc.vim" and "denops.vim" and "ddc-tags-exec"

https://github.com/Shougo/ddc.vim
https://github.com/vim-denops/denops.vim


==============================================================================
EXAMPLES					*ddc-matcher_tags-examples*
>
	 call ddc#custom#patch_global('sourceOptions', #{
	       \ 'tags-exec': {
	       \   'matchers': ['matcher_tags'],
	       \   'splitByRegexp': '(?=[A-Z])|_',
	       \   'splitUnionString': '.*',
	       \ }
	 ```vim

==============================================================================
PARAMS						*ddc-matcher_tags-params*

				*ddc-matcher_tags-param-maxMatchLength*
maxMatchLength	(number)
		Set `0` to reduce items which don't match with entire user
		input.
		Set a positive number to reduce items which don't match with
		user input in the length.
		Set a negative number to apply filter in the length shorter
		than current input by the absolute number.
		Note: There is no guarantee that this option will work
		properly when user input string contains some particular
		characters. It depends on the implementation of
		`String.prototype.slice()`.

		Default: `0`

				*ddc-matcher_tags-param- splitByRegexp*
splitByRegexp	(string)
		Splits string compared with candidate items with RegExp.
		Must match strategy used in tags-exec.

		Default: `(?=[A-Z])|_`

				*ddc-matcher_tags-param- splitUnionString*
splitUnionString	(string)
		Expression used as a connective to match filtered elements.

		Default: `.*`

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
